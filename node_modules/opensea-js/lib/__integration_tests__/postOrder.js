"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var mocha_1 = require("mocha");
var init_1 = require("./init");
var constants_1 = require("../__tests__/constants");
var utils_1 = require("../__tests__/utils");
(0, mocha_1.suite)("SDK: order posting", function () {
    (0, mocha_1.test)("Post Buy Order", function () { return __awaiter(void 0, void 0, void 0, function () {
        var buyOrder, order;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    buyOrder = {
                        accountAddress: init_1.walletAddress,
                        startAmount: constants_1.OFFER_AMOUNT !== null && constants_1.OFFER_AMOUNT !== void 0 ? constants_1.OFFER_AMOUNT : "0.004",
                        asset: {
                            tokenAddress: "0x1a92f7381b9f03921564a437210bb9396471050c",
                            tokenId: "2288",
                        },
                    };
                    return [4 /*yield*/, init_1.sdk.createBuyOrder(buyOrder)];
                case 1:
                    order = _a.sent();
                    (0, utils_1.expectValidOrder)(order);
                    return [2 /*return*/];
            }
        });
    }); });
    (0, mocha_1.test)("Post Sell Order", function () { return __awaiter(void 0, void 0, void 0, function () {
        var sellOrder, order;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    sellOrder = {
                        accountAddress: init_1.walletAddress,
                        startAmount: init_1.LISTING_AMOUNT !== null && init_1.LISTING_AMOUNT !== void 0 ? init_1.LISTING_AMOUNT : "40",
                        asset: {
                            tokenAddress: init_1.TOKEN_ADDRESS !== null && init_1.TOKEN_ADDRESS !== void 0 ? init_1.TOKEN_ADDRESS : "",
                            tokenId: init_1.TOKEN_ID !== null && init_1.TOKEN_ID !== void 0 ? init_1.TOKEN_ID : "",
                        },
                    };
                    return [4 /*yield*/, init_1.sdk.createSellOrder(sellOrder)];
                case 1:
                    order = _a.sent();
                    (0, utils_1.expectValidOrder)(order);
                    return [2 /*return*/];
            }
        });
    }); });
    (0, mocha_1.test)("Post collection offer", function () { return __awaiter(void 0, void 0, void 0, function () {
        var collection, postOrderRequest, offerResponse;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, init_1.sdk.api.getCollection("cool-cats-nft")];
                case 1:
                    collection = _a.sent();
                    postOrderRequest = {
                        collectionSlug: collection.slug,
                        accountAddress: init_1.walletAddress,
                        amount: constants_1.OFFER_AMOUNT !== null && constants_1.OFFER_AMOUNT !== void 0 ? constants_1.OFFER_AMOUNT : "0.004",
                        quantity: 1,
                        paymentTokenAddress: constants_1.WETH_ADDRESS,
                    };
                    return [4 /*yield*/, init_1.sdk.createCollectionOffer(postOrderRequest)];
                case 2:
                    offerResponse = _a.sent();
                    (0, chai_1.expect)(offerResponse).to.exist;
                    (0, chai_1.expect)(offerResponse).to.exist.and.to.have.property("protocol_data");
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=postOrder.js.map
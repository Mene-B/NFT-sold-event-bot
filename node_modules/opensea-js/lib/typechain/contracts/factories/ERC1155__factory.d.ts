import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";
export declare class ERC1155__factory {
    static readonly abi: readonly [{
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "fallback";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_spender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "_block";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_storage";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_oldContract";
            readonly type: "address";
        }];
        readonly name: "Initialize";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly name: "_block";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_nextContract";
            readonly type: "address";
        }];
        readonly name: "Retire";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_data";
            readonly type: "string";
        }];
        readonly name: "Log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateDecimals";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateName";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateSymbol";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_uri";
            readonly type: "string";
        }];
        readonly name: "SetURI";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "Assign";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_creator";
            readonly type: "address";
        }];
        readonly name: "AcceptAssignment";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_creator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_isNonFungible";
            readonly type: "bool";
        }];
        readonly name: "Create";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "Mint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateMaxMeltFee";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateMeltFee";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_approved";
            readonly type: "bool";
        }];
        readonly name: "OperatorApproval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_feeId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_feeValue";
            readonly type: "uint256";
        }];
        readonly name: "TransferFee";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateMaxTransferFee";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateTransferable";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "UpdateTransferFee";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_account";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_whitelisted";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_on";
            readonly type: "bool";
        }];
        readonly name: "Whitelist";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "Melt";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_sender";
            readonly type: "address";
        }];
        readonly name: "DeployERCAdapter";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_tradeId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_firstParty";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_secondParty";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_escrowedEnjFirstParty";
            readonly type: "uint256";
        }];
        readonly name: "CreateTrade";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_tradeId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_firstParty";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly name: "_secondParty";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_receivedEnjFirstParty";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_changeEnjFirstParty";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly name: "_receivedEnjSecondParty";
            readonly type: "uint256";
        }];
        readonly name: "CompleteTrade";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly name: "_tradeId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly name: "_firstParty";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly name: "_receivedEnjFirstParty";
            readonly type: "uint256";
        }];
        readonly name: "CancelTrade";
        readonly type: "event";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_interfaceID";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_name";
            readonly type: "string";
        }, {
            readonly name: "_totalSupply";
            readonly type: "uint256";
        }, {
            readonly name: "_initialReserve";
            readonly type: "uint256";
        }, {
            readonly name: "_supplyModel";
            readonly type: "address";
        }, {
            readonly name: "_meltValue";
            readonly type: "uint256";
        }, {
            readonly name: "_meltFeeRatio";
            readonly type: "uint16";
        }, {
            readonly name: "_transferable";
            readonly type: "uint8";
        }, {
            readonly name: "_transferFeeSettings";
            readonly type: "uint256[3]";
        }, {
            readonly name: "_nonFungible";
            readonly type: "bool";
        }];
        readonly name: "create";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_initialReserve";
            readonly type: "uint256";
        }];
        readonly name: "minMeltValue";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_to";
            readonly type: "address[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "mintFungibles";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_to";
            readonly type: "address[]";
        }];
        readonly name: "mintNonFungibles";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_to";
            readonly type: "address[]";
        }, {
            readonly name: "_data";
            readonly type: "uint128[]";
        }];
        readonly name: "mintNonFungiblesWithData";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "reserve";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint128";
        }];
        readonly name: "releaseReserve";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_name";
            readonly type: "string";
        }];
        readonly name: "updateName";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_creator";
            readonly type: "address";
        }];
        readonly name: "assign";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "acceptAssignment";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_account";
            readonly type: "address";
        }, {
            readonly name: "_whitelisted";
            readonly type: "address";
        }, {
            readonly name: "_on";
            readonly type: "bool";
        }];
        readonly name: "setWhitelisted";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_transferable";
            readonly type: "uint8";
        }];
        readonly name: "setTransferable";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_fee";
            readonly type: "uint16";
        }];
        readonly name: "setMeltFee";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_fee";
            readonly type: "uint16";
        }];
        readonly name: "decreaseMaxMeltFee";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_fee";
            readonly type: "uint256";
        }];
        readonly name: "setTransferFee";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_fee";
            readonly type: "uint256";
        }];
        readonly name: "decreaseMaxTransferFee";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_decimals";
            readonly type: "uint8";
        }, {
            readonly name: "_symbol";
            readonly type: "string";
        }];
        readonly name: "deployERC20Adapter";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
        }];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_symbol";
            readonly type: "string";
        }];
        readonly name: "deployERC721Adapter";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
        }];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_data";
            readonly type: "string";
        }];
        readonly name: "addLog";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [];
        readonly name: "typeCount";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_index";
            readonly type: "uint256";
        }];
        readonly name: "typeByIndex";
        readonly outputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [];
        readonly name: "nonFungibleTypeCount";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_index";
            readonly type: "uint256";
        }];
        readonly name: "nonFungibleTypeByIndex";
        readonly outputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [];
        readonly name: "fungibleTypeCount";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_index";
            readonly type: "uint256";
        }];
        readonly name: "fungibleTypeByIndex";
        readonly outputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "typeData";
        readonly outputs: readonly [{
            readonly name: "_name";
            readonly type: "string";
        }, {
            readonly name: "_creator";
            readonly type: "address";
        }, {
            readonly name: "_meltValue";
            readonly type: "uint256";
        }, {
            readonly name: "_meltFeeRatio";
            readonly type: "uint16";
        }, {
            readonly name: "_meltFeeMaxRatio";
            readonly type: "uint16";
        }, {
            readonly name: "_supplyModel";
            readonly type: "address";
        }, {
            readonly name: "_totalSupply";
            readonly type: "uint256";
        }, {
            readonly name: "_circulatingSupply";
            readonly type: "uint256";
        }, {
            readonly name: "_reserve";
            readonly type: "uint256";
        }, {
            readonly name: "_transferable";
            readonly type: "uint8";
        }, {
            readonly name: "_transferFeeData";
            readonly type: "uint256[4]";
        }, {
            readonly name: "_nonFungible";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "transferSettings";
        readonly outputs: readonly [{
            readonly name: "_transferable";
            readonly type: "uint8";
        }, {
            readonly name: "_transferFeeType";
            readonly type: "uint8";
        }, {
            readonly name: "_transferFeeCurrency";
            readonly type: "uint256";
        }, {
            readonly name: "_transferFeeValue";
            readonly type: "uint256";
        }, {
            readonly name: "_transferFeeMaxValue";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_creator";
            readonly type: "address";
        }];
        readonly name: "isCreatorOf";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_account";
            readonly type: "address";
        }, {
            readonly name: "_whitelisted";
            readonly type: "address";
        }];
        readonly name: "whitelisted";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "string";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "mintableSupply";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "circulatingSupply";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "string";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getERC20Adapter";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "getERC721Adapter";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }, {
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransfer";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }, {
            readonly name: "_msgSender";
            readonly type: "address";
        }];
        readonly name: "transferAdapter";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }, {
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }, {
            readonly name: "_msgSender";
            readonly type: "address";
        }];
        readonly name: "transferFromAdapter";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "batchTransfer";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }, {
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "safeBatchTransfer";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "batchTransferFrom";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }, {
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "safeBatchTransferFrom";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address[]";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "multicastTransfer";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address[]";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }, {
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "safeMulticastTransfer";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_from";
            readonly type: "address[]";
        }, {
            readonly name: "_to";
            readonly type: "address[]";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "multicastTransferFrom";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly name: "_spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_spender";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_currentValue";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_spender";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_currentValue";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }, {
            readonly name: "_msgSender";
            readonly type: "address";
        }];
        readonly name: "approveAdapter";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_spender";
            readonly type: "address";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_currentValues";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "batchApprove";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_approved";
            readonly type: "bool";
        }];
        readonly name: "setApproval";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly name: "_approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_approved";
            readonly type: "bool";
        }, {
            readonly name: "_msgSender";
            readonly type: "address";
        }];
        readonly name: "setApprovalAdapter";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly name: "_operator";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "isApproved";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly name: "_operator";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }, {
            readonly name: "_from";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "transferFees";
        readonly outputs: readonly [{
            readonly name: "_transferValue";
            readonly type: "uint256";
        }, {
            readonly name: "_minTransferValue";
            readonly type: "uint256";
        }, {
            readonly name: "_transferFeeCurrency";
            readonly type: "uint256";
        }, {
            readonly name: "_fee";
            readonly type: "uint256";
        }, {
            readonly name: "_maxFee";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_askingIds";
            readonly type: "uint256[]";
        }, {
            readonly name: "_askingValues";
            readonly type: "uint128[]";
        }, {
            readonly name: "_offeringIds";
            readonly type: "uint256[]";
        }, {
            readonly name: "_offeringValues";
            readonly type: "uint128[]";
        }, {
            readonly name: "_secondParty";
            readonly type: "address";
        }];
        readonly name: "createTrade";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "tradeCompletable";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "completeTrade";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "cancelTrade";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_ids";
            readonly type: "uint256[]";
        }, {
            readonly name: "_values";
            readonly type: "uint256[]";
        }];
        readonly name: "melt";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_uri";
            readonly type: "string";
        }];
        readonly name: "setURI";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "uri";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "string";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "nonFungibleCount";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_index";
            readonly type: "uint256";
        }];
        readonly name: "nonFungibleByIndex";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly name: "_index";
            readonly type: "uint256";
        }];
        readonly name: "nonFungibleOfOwnerByIndex";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_id";
            readonly type: "uint256";
        }];
        readonly name: "isNonFungible";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly constant: true;
        readonly inputs: readonly [{
            readonly name: "_addr";
            readonly type: "address";
        }];
        readonly name: "isContract";
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
        }];
        readonly payable: false;
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_erc20ContractAddress";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "releaseERC20";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "releaseETH";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_erc721ContractAddress";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_token";
            readonly type: "uint256";
        }];
        readonly name: "releaseERC721";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_erc1155ContractAddress";
            readonly type: "address";
        }, {
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly name: "_id";
            readonly type: "uint256";
        }, {
            readonly name: "_value";
            readonly type: "uint256";
        }];
        readonly name: "releaseERC1155";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_storage";
            readonly type: "address";
        }, {
            readonly name: "_oldContract";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly constant: false;
        readonly inputs: readonly [{
            readonly name: "_nextContract";
            readonly type: "address";
        }];
        readonly name: "retire";
        readonly outputs: readonly [];
        readonly payable: false;
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ERC1155Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): ERC1155;
}
